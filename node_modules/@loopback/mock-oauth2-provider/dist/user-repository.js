// Copyright IBM Corp. 2020. All Rights Reserved.
// Node module: @loopback/mock-oauth2-provider
// This file is licensed under the MIT License.
// License text available at https://opensource.org/licenses/MIT
'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
exports.userRepository = exports.UserRepository = void 0;
const tslib_1 = require("tslib");
const lodash_1 = tslib_1.__importDefault(require("lodash"));
/**
 * Repository to store and access user objects
 */
class UserRepository {
    constructor(list) {
        this.list = list;
    }
    /**
     * find by username
     * @param username
     */
    find(username) {
        return lodash_1.default.filter(this.list, user => user.username === username);
    }
    /**
     * find by id
     * @param id
     */
    findById(id) {
        const usr = lodash_1.default.filter(this.list, (user) => user.id === id);
        if (usr.length > 0)
            return usr[0];
    }
    /**
     * create profile for external user
     * @param user
     */
    createExternalUser(user) {
        this.list[user.id] = user;
    }
}
exports.UserRepository = UserRepository;
/**
 * Sample data to mock existing registered users
 * new users can be registered with the repository functions
 */
const userRepository = new UserRepository({
    '999': {
        id: '999',
        username: 'joesmith71',
        firstName: 'Joseph',
        lastName: 'Smith',
        signingKey: 'AZeb==',
    },
    '1000': {
        id: '1000',
        username: 'simonsmith71',
        firstName: 'Simon',
        lastName: 'Smith',
        signingKey: 'AZeb==',
    },
});
exports.userRepository = userRepository;
//# sourceMappingURL=user-repository.js.map